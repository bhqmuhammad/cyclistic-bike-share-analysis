[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "cyclistic-analysis"
version = "1.0.0"
description = "Comprehensive data analysis for Cyclistic bike-share data"
readme = "README.md"
license = { file = "LICENSE" }
authors = [
    { name = "Muhammad Baihaqi", email = "bhqmuhammad@example.com" },
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Data Scientists",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]
dependencies = [
    "pandas>=1.5.0",
    "numpy>=1.21.0",
    "matplotlib>=3.5.0",
    "seaborn>=0.11.0",
    "jupyter>=1.0.0",
    "scikit-learn>=1.1.0",
    "scipy>=1.9.0",
    "requests>=2.28.0",
]

[project.optional-dependencies]
dev = [
    "black>=22.0.0",
    "flake8>=4.0.0",
    "isort>=5.10.0",
    "mypy>=0.950",
    "pytest>=7.0.0",
    "pytest-cov>=3.0.0",
]
docs = [
    "mkdocs>=1.4.0",
    "mkdocs-material>=8.0.0",
]
viz = [
    "plotly>=5.0.0",
    "bokeh>=2.4.0",
]

[project.urls]
Homepage = "https://github.com/bhqmuhammad/cyclistic-bike-share-analysis"
Repository = "https://github.com/bhqmuhammad/cyclistic-bike-share-analysis"
Issues = "https://github.com/bhqmuhammad/cyclistic-bike-share-analysis/issues"

[project.scripts]
cyclistic-analysis = "main_analysis:main"

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers"
testpaths = ["tests"]
python_files = ["test_*.py"]
python_functions = ["test_*"]

[tool.coverage.run]
source = ["src"]
omit = ["*/tests/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
]